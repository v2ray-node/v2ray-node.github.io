<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://v2ray-node.github.io/news/article-85430.htm" />
    <title>restTemplate配置及使用</title>
        <meta name="description" content="文章目录      1 场景 2 依赖 3 配置 4 使用   4.1 GET请求   4.1.1 普通访问 4.1.2 返回HTTP状态 4.1.3 映射请求参数   4.2 POST请求   4." />
        <link rel="icon" href="/assets/website/img/v2ray_node/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="V2ray Node免费节点官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://v2ray-node.github.io/news/article-85430.htm" />
    <meta property="og:site_name" content="V2ray Node免费节点官网" />
    <meta property="og:title" content="restTemplate配置及使用" />
    <meta property="og:image" content="https://v2ray-node.github.io/uploads/20240810/ef0258d05bc7d0211f47300749f0816c.webp" />
        <meta property="og:release_date" content="2025-03-31T08:41:45" />
    <meta property="og:updated_time" content="2025-03-31T08:41:45" />
        <meta property="og:description" content="文章目录      1 场景 2 依赖 3 配置 4 使用   4.1 GET请求   4.1.1 普通访问 4.1.2 返回HTTP状态 4.1.3 映射请求参数   4.2 POST请求   4." />
        
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="restTemplate配置及使用">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <link href="https://fonts.googleapis.com/css?family=Roboto:300,400,900" rel="stylesheet">
    <link rel="stylesheet" href="/assets/website/fonts/v2ray_node/icomoon/style.css">
    <link rel="stylesheet" href="/assets/website/css/v2ray_node/bootstrap.min.css">
    <link rel="stylesheet" href="/assets/website/css/v2ray_node/jquery-ui.css">
    <link rel="stylesheet" href="/assets/website/css/v2ray_node/owl.carousel.min.css">
    <link rel="stylesheet" href="/assets/website/css/v2ray_node/owl.theme.default.min.css">
    <link rel="stylesheet" href="/assets/website/css/v2ray_node/owl.theme.default.min.css">
    <link rel="stylesheet" href="/assets/website/css/v2ray_node/jquery.fancybox.min.css">
    <link rel="stylesheet" href="/assets/website/fonts/v2ray_node/flaticon/font/flaticon.css">
    <link rel="stylesheet" href="/assets/website/css/v2ray_node/aos.css">
    <link rel="stylesheet" href="/assets/website/css/v2ray_node/style.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-7H6DT73WHK"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-7H6DT73WHK');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-spy="scroll" data-target=".site-navbar-target" data-offset="300" data-page="detail">
    <div class="site-wrap">
            
        <div class="site-mobile-menu site-navbar-target">
            <div class="site-mobile-menu-header">
                <div class="site-mobile-menu-close mt-3">
                    <span class="icon-close2 js-menu-toggle"></span>
                </div>
            </div>
            <div class="site-mobile-menu-body"></div>
        </div>
        <header class="site-navbar py-4 js-sticky-header site-navbar-target" role="banner">
            <div class="container">
                <div class="row align-items-center">
                    <div class="col-6 col-md-3">
                        <a href="/" class="h2 mb-0">
                                                <span class="mb-0 site-logo"><span>V2ray Node</span></span>
                                                </a>
                    </div>
                    <div class="col-12 col-md-9 d-none d-xl-block">
                        <nav class="site-navigation position-relative text-right" role="navigation">
                            <ul class="site-menu main-menu js-clone-nav mr-auto d-none d-lg-block">
                                                                <li><a href="/" class="nav-link">首页</a></li>
                                                                <li><a href="/free-nodes/" class="nav-link">免费节点</a></li>
                                                                <li><a href="/paid-subscribe/" class="nav-link">推荐机场</a></li>
                                                                <li><a href="/client.htm" class="nav-link">客户端</a></li>
                                                                <li><a href="/news/" class="nav-link">新闻资讯</a></li>
                                                            </ul>
                        </nav>
                    </div>
                    <div class="col-6 d-inline-block d-xl-none ml-md-0 py-3" style="position: relative; top: 3px;"><a href="#" class="site-menu-toggle js-menu-toggle text-black float-right"><span class="icon-menu h3"></span></a></div>
                </div>
            </div>
        </header>
        <div class="site-blocks-cover inner-page-cover overlay" style="background-image: url(/assets/website/img/v2ray_node/hero_1.jpg);" data-aos="fade" id="home-section">
            <div class="container">
                <div class="row">
                    <div class="col-md-6 mt-lg-5 mr-auto text-left align-self-end align-self-md-center">
                        <h1>restTemplate配置及使用</h1>
                        <p><a href="/">首页</a> <span class="mx-3">&bullet;</span> <a href="/news/">新闻资讯</a> <span class="mx-3">&bullet;</span> 正文</p>
                    </div>
                </div>
            </div>
        </div>
        <section class="site-section" id="about-section">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="V2rayNode节点分享站" data-url="https://v2raynode.github.io">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <div class="toc"> <h3>文章目录</h3> <ul> <li> <ul> <li> <ul> <li><a href="#1__1" rel="nofollow">1 场景</a></li> <li><a href="#2__9" rel="nofollow">2 依赖</a></li> <li><a href="#3__26" rel="nofollow">3 配置</a></li> <li><a href="#4__120" rel="nofollow">4 使用</a></li> <li> <ul> <li><a href="#41_GET_133" rel="nofollow">4.1 GET请求</a></li> <li> <ul> <li><a href="#411__147" rel="nofollow">4.1.1 普通访问</a></li> <li><a href="#412_HTTP_153" rel="nofollow">4.1.2 返回HTTP状态</a></li> <li><a href="#413__167" rel="nofollow">4.1.3 映射请求参数</a></li> </ul> </li> <li><a href="#42_POST_176" rel="nofollow">4.2 POST请求</a></li> <li> <ul> <li><a href="#421__178" rel="nofollow">4.2.1 普通访问</a></li> <li><a href="#422__222" rel="nofollow">4.2.2 无请求体的访问</a></li> </ul> </li> <li><a href="#43__250" rel="nofollow">4.3 上传文件</a></li> </ul> </li> </ul> </li> </ul> </li> </ul> </div> <h3> <a id="1__1" rel="nofollow"></a>1 场景</h3> <p>java开发中，使用http连接，访问<code>第三方网络接口</code>，通常使用的连接工具为<code>HttpClient</code>和<code>OKHttp</code>。</p> <p>这两种连接工具，使用起来比较<code>复杂</code>，新手容易出问题。如果使用spring框架，可以使用<code>restTemplate</code>来进行http连接请求。</p> <p>restTemplate默认的连接方式是java中的<code>HttpConnection</code>，可以使用<code>ClientHttpRequestFactory</code>指定不同的HTTP连接方式。</p> <h3> <a id="2__9" rel="nofollow"></a>2 依赖</h3> <p>maven依赖如下：</p> <pre><code class="prism language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>5.2.2.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.httpcomponents<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>httpclient<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.5.7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span> </code></pre> <h3> <a id="3__26" rel="nofollow"></a>3 配置</h3> <pre><code class="prism language-java"><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>http<span class="token punctuation">.</span>client<span class="token punctuation">.</span>HttpClient<span class="token punctuation">;</span> <span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>http<span class="token punctuation">.</span>conn<span class="token punctuation">.</span>HttpClientConnectionManager<span class="token punctuation">;</span> <span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>http<span class="token punctuation">.</span>impl<span class="token punctuation">.</span>client<span class="token punctuation">.</span>HttpClientBuilder<span class="token punctuation">;</span> <span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>http<span class="token punctuation">.</span>impl<span class="token punctuation">.</span>conn<span class="token punctuation">.</span>PoolingHttpClientConnectionManager<span class="token punctuation">;</span> <span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Bean<span class="token punctuation">;</span> <span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Configuration<span class="token punctuation">;</span> <span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>client<span class="token punctuation">.</span>ClientHttpRequestFactory<span class="token punctuation">;</span> <span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>client<span class="token punctuation">.</span>HttpComponentsClientHttpRequestFactory<span class="token punctuation">;</span> <span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>client<span class="token punctuation">.</span>RestTemplate<span class="token punctuation">;</span>  <span class="token annotation punctuation">@Configuration</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RestTemplateConfig</span> <span class="token punctuation">{<!-- --></span>          <span class="token comment">/**      * http连接管理器      * @return      */</span>     <span class="token annotation punctuation">@Bean</span>     <span class="token keyword">public</span> HttpClientConnectionManager <span class="token function">poolingHttpClientConnectionManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token comment">/*// 注册http和https请求         Registry&lt;ConnectionSocketFactory&gt; registry = RegistryBuilder.&lt;ConnectionSocketFactory&gt;create()                 .register("http", PlainConnectionSocketFactory.getSocketFactory())                 .register("https", SSLConnectionSocketFactory.getSocketFactory())                 .build();         PoolingHttpClientConnectionManager poolingHttpClientConnectionManager = new PoolingHttpClientConnectionManager(registry);*/</span>                  PoolingHttpClientConnectionManager poolingHttpClientConnectionManager <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PoolingHttpClientConnectionManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">// 最大连接数</span>         poolingHttpClientConnectionManager<span class="token punctuation">.</span><span class="token function">setMaxTotal</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">// 同路由并发数（每个主机的并发）</span>         poolingHttpClientConnectionManager<span class="token punctuation">.</span><span class="token function">setDefaultMaxPerRoute</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">return</span> poolingHttpClientConnectionManager<span class="token punctuation">;</span>     <span class="token punctuation">}</span>          <span class="token comment">/**      * HttpClient      * @param poolingHttpClientConnectionManager      * @return      */</span>     <span class="token annotation punctuation">@Bean</span>     <span class="token keyword">public</span> HttpClient <span class="token function">httpClient</span><span class="token punctuation">(</span>HttpClientConnectionManager poolingHttpClientConnectionManager<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         HttpClientBuilder httpClientBuilder <span class="token operator">=</span> HttpClientBuilder<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">// 设置http连接管理器</span>         httpClientBuilder<span class="token punctuation">.</span><span class="token function">setConnectionManager</span><span class="token punctuation">(</span>poolingHttpClientConnectionManager<span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token comment">/*// 设置重试次数         httpClientBuilder.setRetryHandler(new DefaultHttpRequestRetryHandler(3, true));*/</span>                  <span class="token comment">// 设置默认请求头</span>         <span class="token comment">/*List&lt;Header&gt; headers = new ArrayList&lt;&gt;();         headers.add(new BasicHeader("Connection", "Keep-Alive"));         httpClientBuilder.setDefaultHeaders(headers);*/</span>                  <span class="token keyword">return</span> httpClientBuilder<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>          <span class="token comment">/**      * 请求连接池配置      * @param httpClient      * @return      */</span>     <span class="token annotation punctuation">@Bean</span>     <span class="token keyword">public</span> ClientHttpRequestFactory <span class="token function">clientHttpRequestFactory</span><span class="token punctuation">(</span>HttpClient httpClient<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         HttpComponentsClientHttpRequestFactory clientHttpRequestFactory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpComponentsClientHttpRequestFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">// httpClient创建器</span>         clientHttpRequestFactory<span class="token punctuation">.</span><span class="token function">setHttpClient</span><span class="token punctuation">(</span>httpClient<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">// 连接超时时间/毫秒（连接上服务器(握手成功)的时间，超出抛出connect timeout）</span>         clientHttpRequestFactory<span class="token punctuation">.</span><span class="token function">setConnectTimeout</span><span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">// 数据读取超时时间(socketTimeout)/毫秒（务器返回数据(response)的时间，超过抛出read timeout）</span>         clientHttpRequestFactory<span class="token punctuation">.</span><span class="token function">setReadTimeout</span><span class="token punctuation">(</span><span class="token number">10</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">// 连接池获取请求连接的超时时间，不宜过长，必须设置/毫秒（超时间未拿到可用连接，会抛出org.apache.http.conn.ConnectionPoolTimeoutException: Timeout waiting for connection from pool）</span>         clientHttpRequestFactory<span class="token punctuation">.</span><span class="token function">setConnectionRequestTimeout</span><span class="token punctuation">(</span><span class="token number">10</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">return</span> clientHttpRequestFactory<span class="token punctuation">;</span>     <span class="token punctuation">}</span>          <span class="token comment">/**      * rest模板      * @return      */</span>     <span class="token annotation punctuation">@Bean</span>     <span class="token keyword">public</span> RestTemplate <span class="token function">restTemplate</span><span class="token punctuation">(</span>ClientHttpRequestFactory clientHttpRequestFactory<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         <span class="token comment">// boot中可使用RestTemplateBuilder.build创建</span>         RestTemplate restTemplate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RestTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">// 配置请求工厂</span>         restTemplate<span class="token punctuation">.</span><span class="token function">setRequestFactory</span><span class="token punctuation">(</span>clientHttpRequestFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">return</span> restTemplate<span class="token punctuation">;</span>     <span class="token punctuation">}</span>      <span class="token punctuation">}</span> </code></pre> <h3> <a id="4__120" rel="nofollow"></a>4 使用</h3> <p>使用到的实体类如下：</p> <pre><code class="prism language-java"><span class="token annotation punctuation">@Data</span> <span class="token annotation punctuation">@ToString</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TempUser</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{<!-- --></span>     <span class="token keyword">private</span> String userName<span class="token punctuation">;</span>        <span class="token keyword">private</span> Integer age<span class="token punctuation">;</span> <span class="token punctuation">}</span> </code></pre> <h4> <a id="41_GET_133" rel="nofollow"></a>4.1 GET请求</h4> <p><strong>后台接口代码：</strong></p> <pre><code class="prism language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"getUser"</span><span class="token punctuation">)</span> <span class="token keyword">public</span> TempUser <span class="token function">getUser</span><span class="token punctuation">(</span>TempUser form<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     TempUser tempUser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TempUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     tempUser<span class="token punctuation">.</span><span class="token function">setUserName</span><span class="token punctuation">(</span>form<span class="token punctuation">.</span><span class="token function">getUserName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     tempUser<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span>form<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token keyword">return</span> tempUser<span class="token punctuation">;</span> <span class="token punctuation">}</span> </code></pre> <h5> <a id="411__147" rel="nofollow"></a>4.1.1 普通访问</h5> <pre><code class="prism language-java">TempUser result <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">getForObject</span><span class="token punctuation">(</span><span class="token string">"http://localhost:8080/cs-admin/rest/getUser?userName=张三&amp;age=18"</span><span class="token punctuation">,</span> TempUser<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </code></pre> <h5> <a id="412_HTTP_153" rel="nofollow"></a>4.1.2 返回HTTP状态</h5> <pre><code class="prism language-java">ResponseEntity<span class="token generics function"><span class="token punctuation">&lt;</span>TempUser<span class="token punctuation">&gt;</span></span> responseEntity <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">getForEntity</span><span class="token punctuation">(</span><span class="token string">"http://localhost:8080/cs-admin/rest/getUser?userName=张三&amp;age=18"</span><span class="token punctuation">,</span> TempUser<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取状态对象</span> HttpStatus httpStatus <span class="token operator">=</span> responseEntity<span class="token punctuation">.</span><span class="token function">getStatusCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取状态码</span> <span class="token keyword">int</span> statusCodeValue <span class="token operator">=</span> responseEntity<span class="token punctuation">.</span><span class="token function">getStatusCodeValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取headers</span> HttpHeaders httpHeaders <span class="token operator">=</span> responseEntity<span class="token punctuation">.</span><span class="token function">getHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取body</span> TempUser result <span class="token operator">=</span> responseEntity<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </code></pre> <h5> <a id="413__167" rel="nofollow"></a>4.1.3 映射请求参数</h5> <pre><code class="prism language-java">Map<span class="token generics function"><span class="token punctuation">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token punctuation">&gt;</span></span> paramMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> paramMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"userName"</span><span class="token punctuation">,</span> <span class="token string">"张三"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> paramMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"age"</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span> TempUser result <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">getForObject</span><span class="token punctuation">(</span><span class="token string">"http://localhost:8080/cs-admin/rest/getUser?userName={userName}&amp;age={age}"</span><span class="token punctuation">,</span> TempUser<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> paramMap<span class="token punctuation">)</span><span class="token punctuation">;</span> </code></pre> <h4> <a id="42_POST_176" rel="nofollow"></a>4.2 POST请求</h4> <h5> <a id="421__178" rel="nofollow"></a>4.2.1 普通访问</h5> <p><strong>后台接口代码：</strong></p> <pre><code class="prism language-java"><span class="token function">RequestMapping</span><span class="token punctuation">(</span><span class="token string">"getPostUser"</span><span class="token punctuation">)</span>     <span class="token keyword">public</span> TempUser <span class="token function">getPostUser</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> TempUser form<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     TempUser tempUser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TempUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     tempUser<span class="token punctuation">.</span><span class="token function">setUserName</span><span class="token punctuation">(</span>form<span class="token punctuation">.</span><span class="token function">getUserName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     tempUser<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span>form<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token keyword">return</span> tempUser<span class="token punctuation">;</span> <span class="token punctuation">}</span> </code></pre> <p><strong>（1）普通访问接口</strong></p> <pre><code class="prism language-java">TempUser param <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TempUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> param<span class="token punctuation">.</span><span class="token function">setUserName</span><span class="token punctuation">(</span><span class="token string">"张三"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> param<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span> TempUser result <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">postForObject</span><span class="token punctuation">(</span><span class="token string">"http://localhost:8080/cs-admin/rest/getPostUser"</span><span class="token punctuation">,</span> param<span class="token punctuation">,</span> TempUser<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  </code></pre> <p><strong>（2）带HEAD访问接口</strong></p> <pre><code class="prism language-java"><span class="token comment">// 请求头信息</span> HttpHeaders headers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HttpHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> headers<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span>MediaType<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token string">"application/json;charset=UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//headers.add("headParam1", "headParamValue");</span>  <span class="token comment">// 请求体内容</span> TempUser param <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TempUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> param<span class="token punctuation">.</span><span class="token function">setUserName</span><span class="token punctuation">(</span><span class="token string">"张三"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> param<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 组装请求信息</span> HttpEntity<span class="token generics function"><span class="token punctuation">&lt;</span>TempUser<span class="token punctuation">&gt;</span></span> httpEntity<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">HttpEntity</span><span class="token operator">&lt;</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>param<span class="token punctuation">,</span>headers<span class="token punctuation">)</span><span class="token punctuation">;</span>  TempUser result <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">postForObject</span><span class="token punctuation">(</span><span class="token string">"http://localhost:8080/cs-admin/rest/getPostUser"</span><span class="token punctuation">,</span> httpEntity<span class="token punctuation">,</span> TempUser<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  </code></pre> <h5> <a id="422__222" rel="nofollow"></a>4.2.2 无请求体的访问</h5> <p>仅method为post，传参方式仍然为get的param方式</p> <p><strong>后台接口代码：</strong></p> <pre><code class="prism language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"getPostUserNoBody"</span><span class="token punctuation">)</span> <span class="token keyword">public</span> TempUser <span class="token function">getPostUserNoBody</span><span class="token punctuation">(</span>TempUser form<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     TempUser tempUser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TempUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     tempUser<span class="token punctuation">.</span><span class="token function">setUserName</span><span class="token punctuation">(</span>form<span class="token punctuation">.</span><span class="token function">getUserName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     tempUser<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span>form<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token keyword">return</span> tempUser<span class="token punctuation">;</span> <span class="token punctuation">}</span>  </code></pre> <p><strong>访问方式：</strong></p> <pre><code class="prism language-java">Map<span class="token generics function"><span class="token punctuation">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token punctuation">&gt;</span></span> paramMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> paramMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"userName"</span><span class="token punctuation">,</span> <span class="token string">"张三"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> paramMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"age"</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span> TempUser result <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">postForObject</span><span class="token punctuation">(</span><span class="token string">"http://localhost:8080/cs-admin/rest/getPostUserNoBody?userName={userName}&amp;age={age}"</span><span class="token punctuation">,</span> null<span class="token punctuation">,</span> TempUser<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> paramMap<span class="token punctuation">)</span><span class="token punctuation">;</span> System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>  </code></pre> <h4> <a id="43__250" rel="nofollow"></a>4.3 上传文件</h4> <p><strong>后台接口代码：</strong></p> <pre><code class="prism language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"uploadFile"</span><span class="token punctuation">)</span> <span class="token keyword">public</span> TempUser <span class="token function">uploadFile</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> TempUser form<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>     MultipartHttpServletRequest multipartHttpServletRequest <span class="token operator">=</span> <span class="token punctuation">(</span>MultipartHttpServletRequest<span class="token punctuation">)</span> request<span class="token punctuation">;</span>     <span class="token comment">//获取文件信息</span>     MultipartFile multipartFile <span class="token operator">=</span> multipartHttpServletRequest<span class="token punctuation">.</span><span class="token function">getFile</span><span class="token punctuation">(</span><span class="token string">"file"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     TempUser tempUser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TempUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token keyword">if</span> <span class="token punctuation">(</span>multipartFile <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span>         tempUser<span class="token punctuation">.</span><span class="token function">setUserName</span><span class="token punctuation">(</span>form<span class="token punctuation">.</span><span class="token function">getUserName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">" "</span><span class="token operator">+</span>multipartFile<span class="token punctuation">.</span><span class="token function">getOriginalFilename</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>     <span class="token keyword">if</span><span class="token punctuation">(</span>form<span class="token operator">!=</span>null<span class="token punctuation">)</span><span class="token punctuation">{<!-- --></span>         tempUser<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span>form<span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>     <span class="token keyword">return</span> tempUser<span class="token punctuation">;</span> <span class="token punctuation">}</span>  </code></pre> <p><strong>访问方式：</strong></p> <pre><code class="prism language-java"><span class="token comment">// 文件</span> FileSystemResource file<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">FileSystemResource</span><span class="token punctuation">(</span><span class="token string">"D:\\Elasticsearch权威指南（中文版）.pdf"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 设置请求内容</span> MultiValueMap<span class="token generics function"><span class="token punctuation">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token punctuation">&gt;</span></span> param<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">LinkedMultiValueMap</span><span class="token operator">&lt;</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> param<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"file"</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 其他参数</span> param<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"userName"</span><span class="token punctuation">,</span> <span class="token string">"张三"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> param<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"age"</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 组装请求信息</span> HttpEntity<span class="token operator">&lt;</span>MultiValueMap<span class="token generics function"><span class="token punctuation">&lt;</span>String<span class="token punctuation">,</span> Object<span class="token punctuation">&gt;</span></span><span class="token operator">&gt;</span> httpEntity<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">HttpEntity</span><span class="token operator">&lt;</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 发送请求</span> TempUser result <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">postForObject</span><span class="token punctuation">(</span><span class="token string">"http://localhost:8080/cs-admin/rest/uploadFile"</span><span class="token punctuation">,</span> httpEntity<span class="token punctuation">,</span> TempUser<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  </code></pre> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-84718.htm">1970年农历4月27日（1970年农历4月27日阳历是多少）</a></p>
                                        <p>下一个：<a href="/news/article-85431.htm">适合女人小成本开店（适合女人小成本开店成本5万）</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-85431.htm" title="适合女人小成本开店（适合女人小成本开店成本5万）">适合女人小成本开店（适合女人小成本开店成本5万）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-16-free-node-subscribe.htm" title="「3月16日」最高速度19.8M/S，2025年SSR/Shadowrocket/Clash/V2ray每天更新免费节点订阅链接">「3月16日」最高速度19.8M/S，2025年SSR/Shadowrocket/Clash/V2ray每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-79806.htm" title="宠物医院服务项目价格表（宠物医院服务项目价格表最新）">宠物医院服务项目价格表（宠物医院服务项目价格表最新）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-26-node-share.htm" title="「3月26日」最高速度22.2M/S，2025年SSR/V2ray/Shadowrocket/Clash每天更新免费节点订阅链接">「3月26日」最高速度22.2M/S，2025年SSR/V2ray/Shadowrocket/Clash每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-1-node-share-links.htm" title="「4月1日」最高速度21.1M/S，2025年V2ray/SSR/Shadowrocket/Clash每天更新免费节点订阅链接">「4月1日」最高速度21.1M/S，2025年V2ray/SSR/Shadowrocket/Clash每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-73013.htm" title="VUE元素的隐藏和显示（v-show指令)">VUE元素的隐藏和显示（v-show指令)</a></li>
                        <li class="py-2"><a href="/news/article-69064.htm" title="Quartz高可用定时任务快速上手">Quartz高可用定时任务快速上手</a></li>
                        <li class="py-2"><a href="/news/article-75695.htm" title="合肥哪里有领养猫狗的地方 合肥有领养猫的地方吗">合肥哪里有领养猫狗的地方 合肥有领养猫的地方吗</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-2-clash-v2ray-ss-ssr.htm" title="「3月2日」最高速度18.1M/S，2025年Shadowrocket/V2ray/SSR/Clash每天更新免费节点订阅链接">「3月2日」最高速度18.1M/S，2025年Shadowrocket/V2ray/SSR/Clash每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-76391.htm" title="动物疫苗种类及类型分类图解（动物疫苗的种类）">动物疫苗种类及类型分类图解（动物疫苗的种类）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">6</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">90</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </section>
                <footer class="site-footer">
            <div class="container">
                <div class="row text-center">
                    <div class="col-md-12">
                        <div class="border-top">
                    <p>
                        <a href="/">首页</a> | 
                        <a href="/free-node/">免费节点</a> | 
                        <a href="/news/">新闻资讯</a> |
                        <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                            <p>
                                <a href="/">V2ray Node免费节点官网</a> 版权所有 Powered by WordPress
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </footer>
      <script src="/assets/website/js/frontend/v2ray_node/jquery-3.3.1.min.js"></script>
      <script src="/assets/website/js/frontend/v2ray_node/jquery-migrate-3.0.1.min.js"></script>
      <script src="/assets/website/js/frontend/v2ray_node/jquery-ui.js"></script>
      <script src="/assets/website/js/frontend/v2ray_node/popper.min.js"></script>
      <script src="/assets/website/js/frontend/v2ray_node/bootstrap.min.js"></script>
      <script src="/assets/website/js/frontend/v2ray_node/owl.carousel.min.js"></script>
      <script src="/assets/website/js/frontend/v2ray_node/jquery.stellar.min.js"></script>
      <script src="/assets/website/js/frontend/v2ray_node/jquery.easing.1.3.js"></script>
      <script src="/assets/website/js/frontend/v2ray_node/aos.js"></script>
      <script src="/assets/website/js/frontend/v2ray_node/jquery.fancybox.min.js"></script>
      <script src="/assets/website/js/frontend/v2ray_node/jquery.sticky.js"></script>
      <script src="/assets/website/js/frontend/v2ray_node/main.js"></script>
      <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
      <script src="/assets/website/js/frontend/G.js"></script>
    </div> <!-- .site-wrap -->
</body>

</html>