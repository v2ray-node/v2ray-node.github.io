<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://v2ray-node.github.io/news/article-88310.htm" />
    <title>【Java分享客栈】一文搞定京东零售开源的AsyncTool，彻底解决异步编排问题</title>
        <meta name="description" content="一、前言  本章主要是承接上一篇讲CompletableFuture的文章，想了解的可以先去看看案例： https://juejin.cn/post/7091132240574283813 Compl" />
        <link rel="icon" href="/assets/website/img/v2ray_node/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="V2ray Node免费节点官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://v2ray-node.github.io/news/article-88310.htm" />
    <meta property="og:site_name" content="V2ray Node免费节点官网" />
    <meta property="og:title" content="【Java分享客栈】一文搞定京东零售开源的AsyncTool，彻底解决异步编排问题" />
    <meta property="og:image" content="https://v2ray-node.github.io/uploads/20240810/050eeaeae15c4f80c45d1b2f1bf69e02.webp" />
        <meta property="og:release_date" content="2025-04-04T09:09:32" />
    <meta property="og:updated_time" content="2025-04-04T09:09:32" />
        <meta property="og:description" content="一、前言  本章主要是承接上一篇讲CompletableFuture的文章，想了解的可以先去看看案例： https://juejin.cn/post/7091132240574283813 Compl" />
        
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="【Java分享客栈】一文搞定京东零售开源的AsyncTool，彻底解决异步编排问题">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <link href="https://fonts.googleapis.com/css?family=Roboto:300,400,900" rel="stylesheet">
    <link rel="stylesheet" href="/assets/website/fonts/v2ray_node/icomoon/style.css">
    <link rel="stylesheet" href="/assets/website/css/v2ray_node/bootstrap.min.css">
    <link rel="stylesheet" href="/assets/website/css/v2ray_node/jquery-ui.css">
    <link rel="stylesheet" href="/assets/website/css/v2ray_node/owl.carousel.min.css">
    <link rel="stylesheet" href="/assets/website/css/v2ray_node/owl.theme.default.min.css">
    <link rel="stylesheet" href="/assets/website/css/v2ray_node/owl.theme.default.min.css">
    <link rel="stylesheet" href="/assets/website/css/v2ray_node/jquery.fancybox.min.css">
    <link rel="stylesheet" href="/assets/website/fonts/v2ray_node/flaticon/font/flaticon.css">
    <link rel="stylesheet" href="/assets/website/css/v2ray_node/aos.css">
    <link rel="stylesheet" href="/assets/website/css/v2ray_node/style.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-7H6DT73WHK"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-7H6DT73WHK');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-spy="scroll" data-target=".site-navbar-target" data-offset="300" data-page="detail">
    <div class="site-wrap">
            
        <div class="site-mobile-menu site-navbar-target">
            <div class="site-mobile-menu-header">
                <div class="site-mobile-menu-close mt-3">
                    <span class="icon-close2 js-menu-toggle"></span>
                </div>
            </div>
            <div class="site-mobile-menu-body"></div>
        </div>
        <header class="site-navbar py-4 js-sticky-header site-navbar-target" role="banner">
            <div class="container">
                <div class="row align-items-center">
                    <div class="col-6 col-md-3">
                        <a href="/" class="h2 mb-0">
                                                <span class="mb-0 site-logo"><span>V2ray Node</span></span>
                                                </a>
                    </div>
                    <div class="col-12 col-md-9 d-none d-xl-block">
                        <nav class="site-navigation position-relative text-right" role="navigation">
                            <ul class="site-menu main-menu js-clone-nav mr-auto d-none d-lg-block">
                                                                <li><a href="/" class="nav-link">首页</a></li>
                                                                <li><a href="/free-nodes/" class="nav-link">免费节点</a></li>
                                                                <li><a href="/paid-subscribe/" class="nav-link">推荐机场</a></li>
                                                                <li><a href="/client.htm" class="nav-link">客户端</a></li>
                                                                <li><a href="/news/" class="nav-link">新闻资讯</a></li>
                                                            </ul>
                        </nav>
                    </div>
                    <div class="col-6 d-inline-block d-xl-none ml-md-0 py-3" style="position: relative; top: 3px;"><a href="#" class="site-menu-toggle js-menu-toggle text-black float-right"><span class="icon-menu h3"></span></a></div>
                </div>
            </div>
        </header>
        <div class="site-blocks-cover inner-page-cover overlay" style="background-image: url(/assets/website/img/v2ray_node/hero_1.jpg);" data-aos="fade" id="home-section">
            <div class="container">
                <div class="row">
                    <div class="col-md-6 mt-lg-5 mr-auto text-left align-self-end align-self-md-center">
                        <h1>【Java分享客栈】一文搞定京东零售开源的AsyncTool，彻底解决异步编排问题</h1>
                        <p><a href="/">首页</a> <span class="mx-3">&bullet;</span> <a href="/news/">新闻资讯</a> <span class="mx-3">&bullet;</span> 正文</p>
                    </div>
                </div>
            </div>
        </div>
        <section class="site-section" id="about-section">
            <div class="container">
                <div class="row">
                    <div class="col-md-9">
                                        <input type="hidden" id="share-website-info" data-name="V2rayNode节点分享站" data-url="https://v2raynode.github.io">
                  				  				  				<h3 id="一前言">一、前言</h3> <blockquote> <p>本章主要是承接上一篇讲CompletableFuture的文章，想了解的可以先去看看案例：</p> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://juejin.cn/post/7091132240574283813"  target="_blank" rel="nofollow">https://juejin.cn/post/7091132240574283813</a></p> <p>CompletableFuture已经提供了串行、并行等常用异步编排的方案，但在细节上还是有许多不足，比如回调方面，编排复杂顺序方面，就捉襟见肘了。</p> <p> 之前我有关注过Gitee上star量还不错的一款开源工具AsyncTool：</p> <p><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://gitee.com/jd-platform-opensource/asyncTool"  target="_blank" rel="nofollow">https://gitee.com/jd-platform-opensource/asyncTool</a></p> <p>是由京东零售的高级工程师编写的，提供了非常丰富的异步编排功能，并且经过了京东内部的测试，是对CompletableFuture的封装和补足，试用了一下挺不错。</p> </blockquote> <p></p> <h3 id="二用法">二、用法</h3> <h4 id="1引入">1、引入</h4> <blockquote> <p>1）、不推荐：maven引入，这个比较坑，客观原因经常会导致依赖下载不下来，不推荐使用；</p> <p>2）、推荐：直接下载源码，因为代码量很少，就几个核心类和测试类。</p> </blockquote> <p>如下图所示，把下载的源码拷贝进来即可，核心代码放到java目录里面，测试代码放到test目录里面。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/ca3e17fc58e713e414dc9482b2482163.jpg" alt="【Java分享客栈】一文搞定京东零售开源的AsyncTool，彻底解决异步编排问题"></p> <p></p> <h4 id="2编写worker">2、编写worker</h4> <blockquote> <p>1）、worker是AsyncTool中的一个思想，专门来处理任务的，比如查询、rpc调用等耗时操作，一个任务就是一个worker；</p> <p>2）、构建worker十分简单，只需要实现IWorker和ICallback接口即可；</p> <p>3）、这里，我们承接上一篇文章的案例，分别创建查询二十四节气和查询星座的worker；</p> <p>4）、其中begin方法是构建开始时会执行，result方法是获取到结果后会执行，action方法就是处理具体任务的地方，一般业务就在这里编写，defaultValue方法提供超时异常时返回的默认值。</p> </blockquote> <p>1）、二十四节气worker</p> <pre><code class="language-java">package com.example.async.worker;  import cn.hutool.http.HttpUtil; import com.jd.platform.async.callback.ICallback; import com.jd.platform.async.callback.IWorker; import com.jd.platform.async.executor.timer.SystemClock; import com.jd.platform.async.worker.WorkResult; import com.jd.platform.async.wrapper.WorkerWrapper; import lombok.extern.slf4j.Slf4j;  import java.util.Map; import java.util.concurrent.TimeUnit;  /**  * &lt;p&gt;  * 二十四节气worker  * &lt;/p&gt;  *  * @author 福隆苑居士，公众号：【Java分享客栈】  * @since 2022-04-27 18:01  */ @Slf4j public class TwentyFourWorker implements IWorker&lt;String, String&gt;, ICallback&lt;String, String&gt; {     public static final String APPKEY = "xxxxxx";// 你的appkey    public static final String URL = "https://api.jisuapi.com/jieqi/query";     @Override    public void begin() {       // System.out.println(Thread.currentThread().getName() + "- start --" + System.currentTimeMillis());    }     @Override    public void result(boolean success, String param, WorkResult&lt;String&gt; workResult) {       if (success) {          System.out.println("callback twentyFourWorker success--" + SystemClock.now() + "----" + workResult.getResult()                + "-threadName:" +Thread.currentThread().getName());       } else {          System.err.println("callback twentyFourWorker failure--" + SystemClock.now() + "----"  + workResult.getResult()                + "-threadName:" +Thread.currentThread().getName());       }    }     /**     * 查询二十四节气     */    @Override    public String action(String object, Map&lt;String, WorkerWrapper&gt; allWrappers) {       String url = URL + "?appkey=" + APPKEY;       String result = HttpUtil.get(url);        // 模拟时长       try {          TimeUnit.SECONDS.sleep(5);       } catch (Exception e) {          log.error("[二十四节气]&gt;&gt;&gt;&gt; 异常: {}", e.getMessage(), e);       }        return result;    }     @Override    public String defaultValue() {       return "twentyFourWorker";    } }</code></pre> <p></p> <p>2）、星座worker</p> <pre><code class="language-java">package com.example.async.worker;  import cn.hutool.http.HttpUtil; import com.jd.platform.async.callback.ICallback; import com.jd.platform.async.callback.IWorker; import com.jd.platform.async.executor.timer.SystemClock; import com.jd.platform.async.worker.WorkResult; import com.jd.platform.async.wrapper.WorkerWrapper; import lombok.extern.slf4j.Slf4j;  import java.util.Map; import java.util.concurrent.TimeUnit;  /**  * &lt;p&gt;  * 星座worker  * &lt;/p&gt;  *  * @author 福隆苑居士，公众号：【Java分享客栈】  * @since 2022-04-27 18:01  */ @Slf4j public class ConstellationWorker implements IWorker&lt;String, String&gt;, ICallback&lt;String, String&gt; {     public static final String APPKEY = "xxxxxx";// 你的appkey    public static final String URL = "https://api.jisuapi.com/astro/all";     @Override    public void begin() {       // System.out.println(Thread.currentThread().getName() + "- start --" + System.currentTimeMillis());    }     @Override    public void result(boolean success, String param, WorkResult&lt;String&gt; workResult) {       if (success) {          System.out.println("callback constellationWorker success--" + SystemClock.now() + "----" + workResult.getResult()                + "-threadName:" +Thread.currentThread().getName());       } else {          System.err.println("callback constellationWorker failure--" + SystemClock.now() + "----"  + workResult.getResult()                + "-threadName:" +Thread.currentThread().getName());       }    }     /**     * 查询星座     */    @Override    public String action(String object, Map&lt;String, WorkerWrapper&gt; allWrappers) {       String url = URL + "?appkey=" + APPKEY;       String result = HttpUtil.get(url);        // 模拟异常       //    int i = 1/0;        // 模拟时长       try {          TimeUnit.SECONDS.sleep(5);       } catch (Exception e) {          log.error("[星座]&gt;&gt;&gt;&gt; 异常: {}", e.getMessage(), e);       }        return result;    }     @Override    public String defaultValue() {       return "constellationWorker";    } }</code></pre> <p></p> <h4 id="3异步编排">3、异步编排</h4> <blockquote> <p>1）、新建一个AsyncToolService，在里面进行worker的声明、构建、编排；</p> <p>2）、Async.beginWork就是执行异步任务，参数分别为超时时间和worker，其中超时时间可以自己设短一点看效果；</p> <p>3）、最后封装结果返回即可，这里为演示案例节省时间直接用map返回。</p> </blockquote> <pre><code class="language-java">package com.example.async.service;  import com.example.async.worker.ConstellationWorker; import com.example.async.worker.TwentyFourWorker; import com.jd.platform.async.executor.Async; import com.jd.platform.async.wrapper.WorkerWrapper; import lombok.extern.slf4j.Slf4j; import org.springframework.stereotype.Service;  import java.util.HashMap; import java.util.Map; import java.util.concurrent.ExecutionException;  /**  * &lt;p&gt;  * AsyncTools服务  * &lt;/p&gt;  *  * @author 福隆苑居士，公众号：【Java分享客栈】  * @since 2022-04-27 17:56  */ @Service @Slf4j public class AsyncToolService {     /**     * 异步返回结果     *     ---- 方式：AsyncTool并行处理     *     * @return 结果     */    public Map&lt;String, Object&gt; queryAsync() throws ExecutionException, InterruptedException {       // 声明worker       TwentyFourWorker twentyFourWorker = new TwentyFourWorker();       ConstellationWorker constellationWorker = new ConstellationWorker();        // 构建二十四节气worker       WorkerWrapper&lt;String, String&gt; twentyFourWrapper =  new WorkerWrapper.Builder&lt;String, String&gt;()             .worker(twentyFourWorker)             .callback(twentyFourWorker)             .param("0")             .build();        // 构建星座worker       WorkerWrapper&lt;String, String&gt; constellationWrapper =  new WorkerWrapper.Builder&lt;String, String&gt;()             .worker(constellationWorker)             .callback(constellationWorker)             .param("1")             .build();        // 开始工作，这里设定超时时间10s，测试时可以设短一点看效果。       Async.beginWork(10000, twentyFourWrapper, constellationWrapper);        // 打印当前线程数       log.debug("----------------- 当前线程数 ----------------");       log.debug(Async.getThreadCount());        // 打印结果       log.debug("----------------- 二十四节气 ----------------");       log.debug("结果: {}", twentyFourWrapper.getWorkResult());       log.debug("----------------- 星座 ----------------");       log.debug("结果: {}", constellationWrapper.getWorkResult());        // 返回       Map&lt;String, Object&gt; map = new HashMap&lt;&gt;();       map.put("twentyFour", twentyFourWrapper.getWorkResult());       map.put("constellation", constellationWrapper.getWorkResult());        // 关闭(spring web类应用不用关闭，否则第二次执行会报线程池异常。)       // Async.shutDown();        return map;    } }</code></pre> <p></p> <h4 id="4测试效果">4、测试效果</h4> <blockquote> <p>上一篇的案例有演示同步执行的结果，在10秒左右，而CompletableFuture的结果在5秒多点。<br /> 这里测试后发现，AsyncTool的结果也是5秒左右，和CompletableFuture差不多，但AsyncTool提供的编排更丰富。</p> </blockquote> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/d699a76cdd4d441a7d489324f46974b4.jpg" alt="【Java分享客栈】一文搞定京东零售开源的AsyncTool，彻底解决异步编排问题"></p> <blockquote> <p>我们把其中一个星座worker的任务耗时调大，模拟一下超时的效果。可以发现，AsyncTool直接返回了我们上面defaultValue方法中设置的默认值。</p> </blockquote> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/9f74bcae09ac4c9cfa0d228c3fd83d37.jpg" alt="【Java分享客栈】一文搞定京东零售开源的AsyncTool，彻底解决异步编排问题"></p> <p></p> <h3 id="三常用编排">三、常用编排</h3> <blockquote> <p>AsyncTool其实提供了很丰富的异步编排方式，包括较复杂的编排，但以我呆过的中小企业为例，几乎用不到复杂编排，最常用的的还是并行以及串行+并行。</p> </blockquote> <p>AsyncTool的QuickStart.md已经做了简洁的说明：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://gitee.com/jd-platform-opensource/asyncTool/blob/master/QuickStart.md"  target="_blank" rel="nofollow">https://gitee.com/jd-platform-opensource/asyncTool/blob/master/QuickStart.md</a></p> <p>1）、任务并行</p> <blockquote> <p>也就是本篇我们案例使用的编排，是我个人平时最常用的一种。</p> </blockquote> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/bdfe3bb17aeb6778e94705eecd68243c.jpg" alt="【Java分享客栈】一文搞定京东零售开源的AsyncTool，彻底解决异步编排问题"></p> <p></p> <p>2）、串行+并行</p> <blockquote> <p>这种其实就是通过next()来做串行和并行的衔接，有些场景也会用到。</p> </blockquote> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/633213bf5bee70aa59352623a9d82865.jpg" alt="【Java分享客栈】一文搞定京东零售开源的AsyncTool，彻底解决异步编排问题"></p> <p></p> <p>3）、依赖其他任务的结果</p> <blockquote> <p>这也是很常见的场景，B任务依赖A任务的结果来实现业务，最后返回。</p> <p>AsyncTool也提供了很方便的方式：</p> <p>1）、在service中构建worker-A时设置一个id名称；</p> <p>2）、你可以发现worker的action方法第二个入参是个map，里面就是所有的wrapper；</p> <p>3）、在worker-B的action方法中get这个id来获取wrapper从而拿到A的结果即可。</p> </blockquote> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/baab5f2aea14e1f9b40e94ef9bcbd95e.jpg" alt="【Java分享客栈】一文搞定京东零售开源的AsyncTool，彻底解决异步编排问题"></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/05b9d6ae9cad9dfb7223d8c7e8473cf6.jpg" alt="【Java分享客栈】一文搞定京东零售开源的AsyncTool，彻底解决异步编排问题"></p> <p></p> <h3 id="四避坑经验">四、避坑经验</h3> <h4 id="1勿关闭线程池">1、勿关闭线程池</h4> <blockquote> <p>AsyncTool提供了很多测试类，里面包含了所有编排方式，可以一一查看并验证，但使用过程中要注意一点，如果是spring-web项目，比如springboot，不需要手动Async.shutdown()处理，否则会执行一次后就关闭线程池了，这是不少人直接拷贝test代码疏忽的地方。</p> </blockquote> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/333b6d7ea65f324bb9530383215f5c9d.jpg" alt="【Java分享客栈】一文搞定京东零售开源的AsyncTool，彻底解决异步编排问题"></p> <p></p> <h4 id="2自定义线程池">2、自定义线程池</h4> <blockquote> <p>这个问题可以在AsyncTool的issue中看到相关讨论，作者君是根据京东零售的业务来决定使用什么线程池的，他们使用的默认线程池就是newCachedThreadPool，无限制长度的线程池，且具备复用特性，按照作者君的说法，因为京东的场景多数为低耗时（10ms）高并发，瞬间冲击的场景，所以最适合这种线程池。</p> </blockquote> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/a2494b093490a74a86859e8f5a7412e2.jpg" alt="【Java分享客栈】一文搞定京东零售开源的AsyncTool，彻底解决异步编排问题"></p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/e873cb7fbba1cc357229af1bf6bc1a10.jpg" alt="【Java分享客栈】一文搞定京东零售开源的AsyncTool，彻底解决异步编排问题"></p> <blockquote> <p>而根据我的经验，不同公司的业务和项目都不同，中小企业往往依靠企事业单位生存，对接第三方厂家较多，rpc接口耗时往往较长且不可控，不符合京东零售低耗时高并发的特点，直接使用Integer.MAX_VALUE的无限制核心线程数的方式不太合适。</p> <p>我建议中小企业使用自定义线程池，根据自身硬件水平和压测结果调整最终核心线程数和任务队列长度，确定合适的拒绝策略，比如直接拒绝或走主线程，这样会比较稳妥。</p> </blockquote> <p></p> <h3 id="五示例代码">五、示例代码</h3> <blockquote> <p>完整示例代码提供给大家，里面有我的极速数据API的key，每天100次免费调用，省去注册账号，先到先测，慢点就只能等明天了哦。</p> <p>链接：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://pan.baidu.com/doc/share/kJyph2LX076okHVWv38tlw-159275174957933"  target="_blank" rel="nofollow">https://pan.baidu.com/doc/share/kJyph2LX076okHVWv38tlw-159275174957933</a></p> <p>提取码：yqms</p> </blockquote> <p></p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-87573.htm">宠物医院好评模板100字图片（宠物医院好评模版）</a></p>
                                        <p>下一个：<a href="/news/article-88311.htm">动物疫苗注射工作注意事项有哪些（动物疫苗注射工作注意事项有哪些要求）</a></p>
                                    </div>
                                    </div>
                    <div class="col-md-3">
                        <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-71685.htm" title="动物诊疗许可证多少钱（动物诊疗许可证样本）">动物诊疗许可证多少钱（动物诊疗许可证样本）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-10-free-node-subscribe-links.htm" title="「3月10日」最高速度18.6M/S，2025年V2ray/Shadowrocket/Clash/SSR每天更新免费节点订阅链接">「3月10日」最高速度18.6M/S，2025年V2ray/Shadowrocket/Clash/SSR每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-73012.htm" title="VUE3开发问题总结(数据更新和页面显示问题)">VUE3开发问题总结(数据更新和页面显示问题)</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-14-node-share.htm" title="「3月14日」最高速度22.6M/S，2025年V2ray/Clash/Shadowrocket/SSR每天更新免费节点订阅链接">「3月14日」最高速度22.6M/S，2025年V2ray/Clash/Shadowrocket/SSR每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-67778.htm" title="宠物打疫苗前需要做什么检查（宠物医院打疫苗前做检查要钱吗）">宠物打疫苗前需要做什么检查（宠物医院打疫苗前做检查要钱吗）</a></li>
                        <li class="py-2"><a href="/news/article-86867.htm" title="动物医院哪里好一点啊（动物医院大众点评）">动物医院哪里好一点啊（动物医院大众点评）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-5-free-high-speed-nodes.htm" title="「3月5日」最高速度20.9M/S，2025年SSR/Clash/V2ray/Shadowrocket每天更新免费节点订阅链接">「3月5日」最高速度20.9M/S，2025年SSR/Clash/V2ray/Shadowrocket每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-70349.htm" title="宠物领养协议书范本模板图片下载 宠物领养协议书范本模板图片下载大全">宠物领养协议书范本模板图片下载 宠物领养协议书范本模板图片下载大全</a></li>
                        <li class="py-2"><a href="/news/article-86160.htm" title="浅谈分布式一致性协议之3PC">浅谈分布式一致性协议之3PC</a></li>
                        <li class="py-2"><a href="/news/article-85431.htm" title="适合女人小成本开店（适合女人小成本开店成本5万）">适合女人小成本开店（适合女人小成本开店成本5万）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">18</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">90</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                    </div>
                </div>
            </div>
        </section>
                <footer class="site-footer">
            <div class="container">
                <div class="row text-center">
                    <div class="col-md-12">
                        <div class="border-top">
                                                <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                            <p>
                                <a href="/">V2ray Node免费节点官网</a> 版权所有 Powered by WordPress
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </footer>
      <script src="/assets/website/js/frontend/v2ray_node/jquery-3.3.1.min.js"></script>
      <script src="/assets/website/js/frontend/v2ray_node/jquery-migrate-3.0.1.min.js"></script>
      <script src="/assets/website/js/frontend/v2ray_node/jquery-ui.js"></script>
      <script src="/assets/website/js/frontend/v2ray_node/popper.min.js"></script>
      <script src="/assets/website/js/frontend/v2ray_node/bootstrap.min.js"></script>
      <script src="/assets/website/js/frontend/v2ray_node/owl.carousel.min.js"></script>
      <script src="/assets/website/js/frontend/v2ray_node/jquery.stellar.min.js"></script>
      <script src="/assets/website/js/frontend/v2ray_node/jquery.easing.1.3.js"></script>
      <script src="/assets/website/js/frontend/v2ray_node/aos.js"></script>
      <script src="/assets/website/js/frontend/v2ray_node/jquery.fancybox.min.js"></script>
      <script src="/assets/website/js/frontend/v2ray_node/jquery.sticky.js"></script>
      <script src="/assets/website/js/frontend/v2ray_node/main.js"></script>
      <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
      <script src="/assets/website/js/frontend/G.js"></script>
    </div> <!-- .site-wrap -->
</body>

</html>